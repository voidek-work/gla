{"mappings":"AACA,IAAI,SAAS,IAAI,OAAO,aAAa;IACjC,YAAY;QACR,QAAQ;QACR,QAAQ;IACZ;IACA,YAAY;QACR,IAAI;IACR;AACJ;AAEA,MAAM,YAAY;IACd,MAAM,QAAQ,OAAO,UAAU;IAC/B,IAAI,QAAQ,KACR,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAE,GAAG,OAAO,CAAC,CAAC,GAAG;QAClC,UAAU;YACN,gBAAgB;YAChB,qBAAqB;YACrB,QAAQ,CAAC,GAAG,EAAE,GAAG;YACjB,aAAa,CAAC,GAAG,EAAE,IAAI,GAAG;YAC1B,OAAO;YACP,OAAO;QACX;IACJ;AAER;AAEA;AAEA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,MAAM,WAAW,SAAS,gBAAgB,CAAC;IAE3C,SAAS,OAAO,CAAC,CAAA;QACb,MAAM,QAAQ,CAAC,QAAQ,YAAY,CAAC,iBAAiB;QACrD,MAAM,WAAW,CAAC,QAAQ,YAAY,CAAC,oBAAoB;QAE3D,+CAA+C;QAC/C,MAAM,WAAW,QAAQ,WAAW,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,UAAU,QAAQ,2CAA2C;QAElE,MAAM,MAAM,CAAC,QAAQ,CAAC,EAAE;QACxB,MAAM,eAAe,QAAQ,WAAW;QACxC,MAAM,YAAY;QAClB,MAAM,cAAc,KAAK,KAAK,CAAC,AAAC,WAAW,OAAQ;QACnD,MAAM,YAAY,AAAC,CAAA,MAAM,KAAI,IAAK;QAElC,IAAI,UAAU;QACd,IAAI,QAAQ;QAEZ,MAAM,gBAAgB;YAClB;YACA,WAAW;YACX,IAAI,QAAQ,aAAa;gBACrB,MAAM,gBAAgB,KAAK,KAAK,CAAC;gBACjC,QAAQ,WAAW,GAAG,aAAa,OAAO,CAAC,OAAO;gBAClD,sBAAsB;YAC1B,OACI,QAAQ,WAAW,GAAG,aAAa,OAAO,CAAC,OAAO;QAE1D;QAEA,QAAQ,WAAW,GAAG,aAAa,OAAO,CAAC,OAAO,QAAQ,2BAA2B;QACrF;IACJ;AACJ;AAGA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,MAAM,QAAQ,OAAO,UAAU;IAC/B,IAAI,QAAQ,KAAK;QACb,MAAM,mBAAmB,SAAS,gBAAgB,CAAC;QAEnD,MAAM,WAAW,IAAI,qBAAqB,CAAC,SAAS;YAChD,QAAQ,OAAO,CAAC,CAAA;gBACZ,IAAI,MAAM,cAAc,EAAE;oBACtB,MAAM,KAAK,MAAM,MAAM;oBACvB,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,IAAI;oBAClC,MAAM,WAAW,GAAG,OAAO,CAAC,QAAQ,IAAI;oBAExC,GAAG,KAAK,CAAC,cAAc,GAAG;oBAC1B,GAAG,KAAK,CAAC,iBAAiB,GAAG;oBAE7B,GAAG,SAAS,CAAC,GAAG,CAAC;oBACjB,SAAS,SAAS,CAAC,KAAK,2BAA2B;gBACvD;YACJ;QACJ,GAAG;YACC,WAAW,IAAI,oCAAoC;QACvD;QAEA,iBAAiB,OAAO,CAAC,CAAA;YACrB,SAAS,OAAO,CAAC;QACrB;IACJ;AACJ","sources":["src/script.js"],"sourcesContent":["\r\nvar swiper = new Swiper(\".mySwiper\", {\r\n    navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n    },\r\n    pagination: {\r\n        el: \".swiper-pagination\",\r\n    },\r\n});\r\n\r\nconst setArrows = () => {\r\n    const width = window.innerWidth;\r\n    if (width < 768) {\r\n        Array.from({ length: 4 }).forEach((_, i) => {\r\n            arrowLine({\r\n                sourcePosition: 'bottomCenter',\r\n                destinationPosition: 'topCenter',\r\n                source: `#id${i}`,\r\n                destination: `#id${i + 1}`,\r\n                style: 'dot',\r\n                color: '#bf5757'\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nsetArrows();\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const counters = document.querySelectorAll('.counter');\r\n\r\n    counters.forEach(counter => {\r\n        const start = +counter.getAttribute('data-start') || 0;\r\n        const duration = +counter.getAttribute('data-duration') || 2000;\r\n\r\n        // Ищем число в тексте (берем первое найденное)\r\n        const endMatch = counter.textContent.match(/\\d+/);\r\n        if (!endMatch) return; // если число не нашли - пропускаем элемент\r\n\r\n        const end = +endMatch[0];\r\n        const originalText = counter.textContent;\r\n        const frameRate = 60;\r\n        const totalFrames = Math.round((duration / 1000) * frameRate);\r\n        const increment = (end - start) / totalFrames;\r\n\r\n        let current = start;\r\n        let frame = 0;\r\n\r\n        const updateCounter = () => {\r\n            frame++;\r\n            current += increment;\r\n            if (frame < totalFrames) {\r\n                const displayNumber = Math.floor(current);\r\n                counter.textContent = originalText.replace(/\\d+/, displayNumber);\r\n                requestAnimationFrame(updateCounter);\r\n            } else {\r\n                counter.textContent = originalText.replace(/\\d+/, end);\r\n            }\r\n        };\r\n\r\n        counter.textContent = originalText.replace(/\\d+/, start); // сначала показываем старт\r\n        updateCounter();\r\n    });\r\n});\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const width = window.innerWidth;\r\n    if (width > 768) {\r\n        const animatedElements = document.querySelectorAll('.animate-once');\r\n\r\n        const observer = new IntersectionObserver((entries, observer) => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    const el = entry.target;\r\n                    const delay = el.dataset.delay || '0s';\r\n                    const duration = el.dataset.duration || '0.6s';\r\n\r\n                    el.style.animationDelay = delay;\r\n                    el.style.animationDuration = duration;\r\n\r\n                    el.classList.add('visible');\r\n                    observer.unobserve(el); // Анимация только один раз\r\n                }\r\n            });\r\n        }, {\r\n            threshold: 0.1 // элемент стал виден хотя бы на 10%\r\n        });\r\n\r\n        animatedElements.forEach(el => {\r\n            observer.observe(el);\r\n        });\r\n    }\r\n});\r\n\r\n"],"names":[],"version":3,"file":"gla.44983732.js.map","sourceRoot":"/__parcel_source_root/"}