# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name your_domain.com www.your_domain.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name your_domain.com www.your_domain.com;

    # SSL Certificates
    ssl_certificate /etc/letsencrypt/live/your_domain.com/fullchain.pem; # Path to your fullchain.pem
    ssl_certificate_key /etc/letsencrypt/live/your_domain.com/privkey.pem; # Path to your privkey.pem
    # Optional: If you have a separate chain file
    # ssl_trusted_certificate /etc/letsencrypt/live/your_domain.com/chain.pem;

    # SSL Configuration (recommended secure settings)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s; # Google DNS, adjust if needed
    resolver_timeout 5s;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Root for your main static frontend application (e.g., index.html, JS, CSS)
    root /var/www/your_frontend_app; # <--- CHANGE THIS TO YOUR FRONTEND PATH
    index index.html index.htm;

    # Serve static files directly from Nginx for the main frontend
    location / {
        try_files $uri $uri/ /index.html =404;
    }

    # Proxy requests for the public API to the Node.js app
    location /api/promotions {
        proxy_pass http://localhost:3000; # Node.js app listens on HTTP, Nginx handles SSL
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Important for Node.js to know it's HTTPS
    }

    # Proxy requests for the admin panel and its related routes to the Node.js app
    location ~ ^/(admin|login|logout|css)/ {
        proxy_pass http://localhost:3000; # Node.js app listens on HTTP, Nginx handles SSL
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Important for Node.js to know it's HTTPS
    }

    # Optional: If your Node.js app serves images from its public folder
    # location /images/ {
    #     proxy_pass http://localhost:3000;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # Optional: Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
